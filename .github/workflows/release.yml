name: Build Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Get version info
        id: vars
        run: |
          echo "COMMIT=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "BUILDDATE=$(date -u +%Y-%m-%dT%H:%M:%SZ)" >> $GITHUB_OUTPUT
          TAG=${GITHUB_REF#refs/tags/}
          echo "VERSION=${TAG#v}" >> $GITHUB_OUTPUT

      - name: Build
        env:
          VERSION: ${{ steps.vars.outputs.VERSION }}
          COMMIT: ${{ steps.vars.outputs.COMMIT }}
          BUILDDATE: ${{ steps.vars.outputs.BUILDDATE }}
        run: |
          set -euo pipefail
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} scripts/build.sh OUT=dist/progressdb-${{ steps.vars.outputs.VERSION }}-${{ matrix.goos }}-${{ matrix.goarch }}

      - name: Package artifact
        if: matrix.goos == 'windows'
        run: |
          pushd dist
          zip -9 progressdb-${{ steps.vars.outputs.VERSION }}-${{ matrix.goos }}-${{ matrix.goarch }}.zip progressdb-${{ steps.vars.outputs.VERSION }}-${{ matrix.goos }}-${{ matrix.goarch }}
          popd

      - name: Create release (once)
        if: ${{ matrix.goos == 'linux' && matrix.goarch == 'amd64' }}
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload release artifact
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/progressdb-${{ steps.vars.outputs.VERSION }}-${{ matrix.goos }}-${{ matrix.goarch }}
          asset_name: progressdb-${{ steps.vars.outputs.VERSION }}-${{ matrix.goos }}-${{ matrix.goarch }}
          asset_content_type: application/octet-stream

