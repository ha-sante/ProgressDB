name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    name: Build binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]
    outputs:
      version: ${{ steps.vars.outputs.VERSION }}
      commit: ${{ steps.vars.outputs.COMMIT }}
      builddate: ${{ steps.vars.outputs.BUILDDATE }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Get version info
        id: vars
        run: |
          echo "COMMIT=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "BUILDDATE=$(date -u +%Y-%m-%dT%H:%M:%SZ)" >> $GITHUB_OUTPUT
          TAG=${GITHUB_REF#refs/tags/}
          echo "VERSION=${TAG#v}" >> $GITHUB_OUTPUT

      - name: Build
        env:
          VERSION: ${{ steps.vars.outputs.VERSION }}
          COMMIT: ${{ steps.vars.outputs.COMMIT }}
          BUILDDATE: ${{ steps.vars.outputs.BUILDDATE }}
        run: |
          set -euo pipefail
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} scripts/build.sh OUT=dist/progressdb-${{ steps.vars.outputs.VERSION }}-${{ matrix.goos }}-${{ matrix.goarch }}

      - name: Package artifacts
        run: |
          set -euo pipefail
          pushd dist
          for f in *${{ steps.vars.outputs.VERSION }}*; do
            if [ -f "$f" ]; then
              if [[ "$f" == *.exe ]]; then
                zip -9 "${f}.zip" "$f"
              else
                tar -czf "${f}.tar.gz" "$f"
              fi
            fi
          done
          popd

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: progressdb-binaries
          path: dist/**

  release:
    name: Create GitHub Release and attach artifacts
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: progressdb-binaries
          path: dist

      - name: Create GitHub Release and upload assets
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          files: dist/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
